# Generated by Django 4.1.5 on 2023-02-07 11:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LessonOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.IntegerField(unique=True)),
                ('full_name', models.CharField(blank=True, max_length=120, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='TrialVideos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(null=True, upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('video_youtube_url', models.CharField(max_length=250)),
                ('video_file_id', models.CharField(blank=True, max_length=100, null=True)),
                ('lesson_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.lessonorder')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
            ],
            options={
                'verbose_name': 'Trial Video',
                'verbose_name_plural': 'Trial Videos',
            },
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_title', models.CharField(blank=True, max_length=100, null=True)),
                ('test_link', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('lesson_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.lessonorder')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Tests',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('points', models.SmallIntegerField(verbose_name='points')),
                ('open_period', models.IntegerField(default=30, verbose_name='open period')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
            ],
        ),
        migrations.CreateModel(
            name='PrimeVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_title', models.CharField(blank=True, max_length=100, null=True)),
                ('video', models.FileField(null=True, upload_to='prime-videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['MOV', 'avi', 'mp4', 'webm', 'mkv'])])),
                ('video_youtube_url', models.CharField(max_length=250)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('video_file_id', models.CharField(blank=True, max_length=100, null=True)),
                ('lesson_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.lessonorder')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.teacher')),
            ],
            options={
                'verbose_name': 'Prime Video',
                'verbose_name_plural': 'Prime Videos',
            },
        ),
        migrations.CreateModel(
            name='PrimeTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_title', models.CharField(blank=True, max_length=100, null=True)),
                ('test_link', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('lesson_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.lessonorder')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.teacher')),
            ],
            options={
                'verbose_name': 'Prime Test',
                'verbose_name_plural': 'Prime Tests',
            },
        ),
        migrations.CreateModel(
            name='ExistingStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=100)),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.level')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aiogrambot.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=255, verbose_name='Answer')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Correct Answer')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='aiogrambot.question', verbose_name='Question')),
            ],
        ),
    ]
